IpUptane DEFINITIONS ::= BEGIN
    -- Keep these in Sync with Uptane::KeyType
    AKIpUptaneKeyType ::= ENUMERATED {
		ed25519(0),
		rsa2048(1),
		rsa4096(2),
		unknownKey(255),
		...
	}

	AKInstallationResult ::= ENUMERATED {
		success,
		failure,
		...
	}
	

	-- Json format image repository metadata
	AKImageMetaJson ::= SEQUENCE {
		root OCTET STRING,
		timestamp OCTET STRING,
		snapshot OCTET STRING,
		targets OCTET STRING,
		...
	}

	-- Json format director metadata
	AKDirectorMetaJson ::= SEQUENCE {
		root OCTET STRING,
		targets OCTET STRING,
		...
	}

	AKDiscoveryReqMes ::= SEQUENCE {
		port INTEGER(0..65535),
		...
	}

	AKDiscoveryRespMes ::= SEQUENCE {
		ecuSerial UTF8String,
		hwId UTF8String,
		port INTEGER(0..65535),
		...
	}

	AKPublicKeyReqMes ::= SEQUENCE {
		...
	}

	AKPublicKeyRespMes ::= SEQUENCE {
		type AKIpUptaneKeyType,
		key OCTET STRING,
		...
	}

	AKManifestReqMes ::= SEQUENCE {
		...
	}

	AKManifestRespMes ::= SEQUENCE {
		manifest CHOICE {
			json OCTET STRING
		},
		...
	}
	

	AKPutMetaReqMes ::= SEQUENCE {
		image CHOICE {
			json AKImageMetaJson
		},
		director CHOICE {
			json AKDirectorMetaJson
		},
		...
	}

	AKPutMetaRespMes ::= SEQUENCE {
		result AKInstallationResult,
		...
	}
	
	AKSendFirmwareReqMes ::= SEQUENCE {
		firmware OCTET STRING,
		...
	}
	
	AKSendFirmwareRespMes ::= SEQUENCE {
		result AKInstallationResult,
		...
	}

	AKIpUptaneMes ::= CHOICE {
		discoveryReq [0] AKDiscoveryReqMes,
		discoveryResp [1] AKDiscoveryRespMes,
		publicKeyReq [2] AKPublicKeyReqMes,
		publicKeyResp [3] AKPublicKeyRespMes,
		manifestReq [4] AKManifestReqMes,
		manifestResp [5] AKManifestRespMes,
		putMetaReq [6] AKPutMetaReqMes,
		putMetaResp [7] AKPutMetaRespMes,
		sendFirmwareReq [12] AKSendFirmwareReqMes,
		sendFirmwareResp [13] AKSendFirmwareRespMes,
		...
	}

END
